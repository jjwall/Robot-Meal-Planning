!function(t){var e={};function o(n){if(e[n])return e[n].exports;var a=e[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,o),a.l=!0,a.exports}o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)o.d(n,a,function(e){return t[e]}.bind(null,a));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=1)}([function(t){t.exports={next_level:"level2",command_palette:{block_width:5,block_height:5},command_blocks:["start","move","angle"],flow_blocks:["up","down","left","right"]}},function(t,e,o){"use strict";o.r(e);var n,a,i=function(){return function(t){this.canvas=t&&t.canvas||document.getElementById("gameScreen"),this.ctx=t&&t.ctx||this.canvas.getContext("2d"),this.rect=t&&t.rect||this.canvas.getBoundingClientRect(),this.blocks=t&&t.blocks||[],this.mouseX=t&&t.mouseX||0,this.mouseY=t&&t.mouseY||0,this.commandControl=t&&t.commandControl||!0,this.flowControl=t&&t.flowControl||!1,this.callStack=t&&t.callStack||[],this.programRunning=t&&t.programRunning||!1}}(),s=o(0),r=function(){function t(t,e,o,n,a,i){this.GameState=t,this.X=e,this.Y=o,this.H=n,this.W=a,this.Color=i,this.gameState=t,this.x=e,this.y=o,this.h=n,this.w=a,this.color=i}return t.prototype.draw=function(){},t.prototype.update=function(){},t}();!function(t){t[t.Empty=0]="Empty",t[t.Start=1]="Start",t[t.Move=2]="Move",t[t.Angle=3]="Angle",t[t.Scan=4]="Scan",t[t.Laser=5]="Laser",t[t.Grapple=6]="Grapple"}(n||(n={})),function(t){t[t.Empty=0]="Empty",t[t.Up=1]="Up",t[t.Down=2]="Down",t[t.Left=3]="Left",t[t.Right=4]="Right",t[t.ConditionalLeftRight=5]="ConditionalLeftRight",t[t.ConditionalLeftUp=6]="ConditionalLeftUp",t[t.ConditionalLeftDown=7]="ConditionalLeftDown",t[t.ConditionalUpRight=8]="ConditionalUpRight",t[t.ConditionalUpDown=9]="ConditionalUpDown",t[t.ConditionalDownRight=10]="ConditionalDownRight"}(a||(a={}));var c=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(e,o)};return function(e,o){function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),l=function(t){function e(e,o,a,i,s,r,c){var l=t.call(this,e,o,a,i,s,r)||this;switch(l.mouseDown=!0,l.set=!1,l.type=c,l.image=new Image,c){case n.Start:l.image.src="data/textures/StartBlock.png";break;case n.Move:l.image.src="data/textures/MoveBlock.png";break;case n.Angle:l.image.src="data/textures/AngleBlock.png"}return l.gameState.blocks.push(l),l}return c(e,t),e.prototype.update=function(){if(this.mouseDown&&(this.x=this.gameState.mouseX-this.w/2,this.y=this.gameState.mouseY-this.h/2,this.set=!1),!this.mouseDown&&!this.set){var t=this.gameState.blocks.indexOf(this);this.gameState.blocks.splice(t,1)}},e.prototype.draw=function(){this.gameState.ctx.fillStyle=this.color,this.gameState.ctx.fillRect(this.x,this.y,this.w,this.h),this.gameState.ctx.translate(this.x,this.y),this.gameState.ctx.drawImage(this.image,0,0),this.gameState.ctx.translate(-this.x,-this.y)},e}(r),h=function(t){function e(e,o,a,i,s,r,c){var l=t.call(this,e,o,a,i,s,r)||this;switch(l.mouseDown=!1,l.type=c,l.image=new Image,c){case n.Start:l.image.src="data/textures/StartBlock.png";break;case n.Move:l.image.src="data/textures/MoveBlock.png";break;case n.Angle:l.image.src="data/textures/AngleBlock.png"}return l.gameState.blocks.push(l),l}return c(e,t),e.prototype.update=function(){this.mouseDown&&(this.mouseDown=!1,new l(this.gameState,this.x,this.y,this.h,this.w,this.Color,this.type))},e.prototype.draw=function(){this.gameState.ctx.fillStyle=this.color,this.gameState.ctx.fillRect(this.x,this.y,this.w,this.h),this.gameState.ctx.translate(this.x,this.y),this.gameState.ctx.drawImage(this.image,0,0),this.gameState.ctx.translate(-this.x,-this.y)},e}(r),u=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(e,o)};return function(e,o){function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),m=function(t){function e(e,o,n,i,s,r,c){var l=t.call(this,e,o,n,i,s,r)||this;switch(l.gameState=e,l.type=c,l.mouseDown=!0,l.set=!1,l.image=new Image,c){case a.Up:l.image.src="data/textures/UpArrow.png";break;case a.Down:l.image.src="data/textures/DownArrow.png";break;case a.Left:l.image.src="data/textures/LeftArrow.png";break;case a.Right:l.image.src="data/textures/RightArrow.png"}return l.gameState.blocks.push(l),l}return u(e,t),e.prototype.update=function(){if(this.mouseDown&&(this.x=this.gameState.mouseX-this.w/2,this.y=this.gameState.mouseY-this.h/2,this.set=!1),!this.mouseDown&&!this.set){var t=this.gameState.blocks.indexOf(this);this.gameState.blocks.splice(t,1)}},e.prototype.draw=function(){this.gameState.ctx.translate(this.x,this.y),this.gameState.ctx.drawImage(this.image,0,0),this.gameState.ctx.translate(-this.x,-this.y),this.gameState.ctx.strokeStyle=this.color,this.gameState.ctx.rect(this.x,this.y,this.w,this.h)},e}(r),f=function(t){function e(e,o,n,i,s,r,c){var l=t.call(this,e,o,n,i,s,r)||this;switch(l.type=c,l.mouseDown=!1,l.image=new Image,c){case a.Up:l.image.src="data/textures/UpArrow.png";break;case a.Down:l.image.src="data/textures/DownArrow.png";break;case a.Left:l.image.src="data/textures/LeftArrow.png";break;case a.Right:l.image.src="data/textures/RightArrow.png"}return l.gameState.blocks.push(l),l}return u(e,t),e.prototype.update=function(){this.mouseDown&&(this.mouseDown=!1,new m(this.gameState,this.x,this.y,this.h,this.w,this.Color,this.type))},e.prototype.draw=function(){this.gameState.ctx.translate(this.x,this.y),this.gameState.ctx.drawImage(this.image,0,0),this.gameState.ctx.translate(-this.x,-this.y),this.gameState.ctx.strokeStyle=this.color,this.gameState.ctx.rect(this.x,this.y,this.w,this.h)},e}(r),p=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(e,o)};return function(e,o){function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),g=function(t){function e(e,o,i,s,r,c,l,h){var u=t.call(this,e,o,i,s,r,h)||this;return u.r=c,u.c=l,u.commandType=n.Empty,u.flowType=a.Empty,u.gameState.blocks.push(u),u}return p(e,t),e.prototype.update=function(){var t=this;this.gameState.blocks.forEach(function(e){(e instanceof l||e instanceof m)&&!1===e.mouseDown&&e.x<t.x+t.w&&e.x+e.w>t.x&&e.y<t.y+t.h&&e.h+e.y>t.y&&(t.commandType===n.Empty&&e instanceof l?(e.x=t.x,e.y=t.y,e.set=!0,t.commandType=e.type):t.flowType===a.Empty&&e instanceof m&&(e.x=t.x,e.y=t.y,e.set=!0,t.flowType=e.type))})},e.prototype.draw=function(){this.gameState.ctx.fillStyle=this.color,this.gameState.ctx.fillRect(this.x,this.y,this.w,this.h)},e}(r);function w(t){console.log("stopping thread"),t.callStack=[],t.programRunning=!1}function y(t,e){var o,i;switch(e.flowType){case a.Up:o=e.r-1,i=e.c;break;case a.Down:o=e.r+1,i=e.c;break;case a.Right:i=e.c+1,o=e.r;break;case a.Left:i=e.c-1,o=e.r}return t.blocks.forEach(function(e){if(e instanceof g&&e.r===o&&e.c===i&&e.commandType!==n.Empty&&e.flowType!==a.Empty)switch(e.commandType){case n.Angle:return function(t,e){console.log("angle"),t.callStack.push(y(t,e))}(t,e);case n.Move:return function(t,e){console.log("move"),t.callStack.push(y(t,e))}(t,e);case n.Start:return function(t,e){console.log("start"),t.callStack.push(y(t,e))}(t,e);default:return w(t)}}),w(t)}var d=new i;!function(t,e,o){for(var i=5,s=5,r=0,c=0;c<e.command_palette.block_height;c++){for(var l=0;l<e.command_palette.block_width;l++)new g(t,s,i,50,50,c,l,o),s+=55;i+=55,r=s,s=5}i+=20;for(var u=0;u<e.command_blocks.length;u++){switch(e.command_blocks[u]){case"start":new h(t,s,i,50,50,"thistle",n.Start);break;case"move":new h(t,s,i,50,50,"thistle",n.Move);break;case"angle":new h(t,s,i,50,50,"thistle",n.Angle);break;case"laser":new h(t,s,i,50,50,"green",n.Laser);break;case"scan":new h(t,s,i,50,50,"darkblue",n.Scan);break;case"grapple":new h(t,s,i,50,50,"maroon",n.Grapple)}s+=55}for(s=r+20,i=5,u=0;u<e.flow_blocks.length;u++){switch(e.flow_blocks[u]){case"up":new f(t,s,i,50,50,"yellow",a.Up);break;case"left":new f(t,s,i,50,50,"yellow",a.Left);break;case"right":new f(t,s,i,50,50,"yellow",a.Right);break;case"down":new f(t,s,i,50,50,"yellow",a.Down)}i+=55}}(d,s,"lightblue"),function(t){t.canvas.addEventListener("mousedown",function(){t.blocks.forEach(function(e){t.mouseY>e.y&&t.mouseY<e.y+e.h&&t.mouseX>e.x&&t.mouseX<e.x+e.w&&(e instanceof l&&t.commandControl||e instanceof h&&t.commandControl||e instanceof m&&t.flowControl||e instanceof f&&t.flowControl?e.mouseDown=!0:e instanceof g&&(t.commandControl?e.commandType=n.Empty:t.flowControl&&(e.flowType=a.Empty)))})},!1),t.canvas.addEventListener("mouseup",function(){t.blocks.forEach(function(t){(t instanceof l||t instanceof m)&&t.mouseDown&&(t.mouseDown=!1)})},!1),t.canvas.addEventListener("mousemove",function(e){t.mouseX=(e.clientX-t.rect.left)/(t.rect.right-t.rect.left)*t.canvas.width,t.mouseY=(e.clientY-t.rect.top)/(t.rect.bottom-t.rect.top)*t.canvas.height},!1),window.onkeyup=function(e){32===e.keyCode&&(t.flowControl?(t.flowControl=!1,t.commandControl=!0,console.log("Command Control!")):t.commandControl&&(t.commandControl=!1,t.flowControl=!0,console.log("Flow Control!"))),83===e.keyCode&&(t.programRunning||(t.programRunning=!0,function(t,e){t.blocks.forEach(function(e){e instanceof g&&e.commandType===n.Start&&e.flowType!==a.Empty&&t.callStack.push(y(t,e))})}(t)))}}(d),setInterval(function(){d.blocks.forEach(function(t){t.update()}),d.ctx.clearRect(0,0,d.canvas.width,d.canvas.height),d.ctx.beginPath(),d.blocks.forEach(function(t){t instanceof m||t.draw()}),d.blocks.forEach(function(t){t instanceof m&&t.draw()}),d.ctx.stroke(),d.callStack.length>0&&d.programRunning?d.callStack.forEach(function(t){t(),d.callStack.pop()}):d.programRunning=!1},12)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,